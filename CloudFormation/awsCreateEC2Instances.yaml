Description: Create a variable number of EC2 instance resources.
Parameters:
  InstanceCount:
    Description: Number of EC2 instances (must be between 1 and 4).
    Type: Number
    Default: 1
    MinValue: 1
    MaxValue: 4
    ConstraintDescription: Must be a number between 1 and 4.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.    
#  ImageId:
#    Description: Image ID to launch EC2 instances.
#    Type: AWS::EC2::Image::Id
#    Default: ami-00aa4671cbf840d82
  InstanceType:
    Description: Instance type to launch EC2 instances.
    Type: String
    Default: t2.micro
    AllowedValues: [ t2.micro, t2.nano, t2.small, t2.medium ]
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Conditions:
  Launch1: !Equals [1, 1]
  Launch2: !Not [!Equals [1, !Ref InstanceCount]]
  Launch3: !And
  - !Not [!Equals [1, !Ref InstanceCount]]
  - !Not [!Equals [2, !Ref InstanceCount]]
  Launch4: !Equals [4, !Ref InstanceCount]
Mappings:
  AWSInstanceType2Arch:
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t2.nano:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
    t2.small:
      Arch: NATHVM64
    t2.medium:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-0b69ea66ff7391e80
    us-east-2:
      HVM64: ami-00c03f7f7f2ec15c3
    us-west-1:
      HVM64: ami-0245d318c6788de52
    us-west-2:
      HVM64: ami-04b762b4289fba92b
    ap-south-1:
      HVM64: ami-0cb0e70f44e1a4bb5
    ap-northeast-2:
      HVM64: ami-0d097db2fb6e0f05e
    ap-southeast-1:
      HVM64: ami-048a01c78f7bae4aa
    ap-southeast-2:
      HVM64: ami-03ed5bd63ba378bd8
    ap-northeast-1:
      HVM64: ami-0ff21806645c5e492
    ca-central-1:
      HVM64: ami-085edf38cedbea498
    eu-central-1:
      HVM64: ami-00aa4671cbf840d82
    eu-west-1:
      HVM64: ami-0ce71448843cb18a1
    eu-west-2:
      HVM64: ami-00a1270ce1e007c27
    eu-west-3:
      HVM64: ami-03b4b78aae82b30f1
    eu-north-1:
      HVM64: ami-1b2fa465
    sa-east-1:
      HVM64: ami-0a1f49a762473adbd
Resources:
  Instance1:
    Condition: Launch1
    Type: AWS::EC2::Instance
    Properties:
      Tags:
      - Key: "Name"
        Value: "DevTools"
      KeyName: !Ref KeyName
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref InstanceSecurityGroup
  Instance2:
    Condition: Launch2
    Type: AWS::EC2::Instance
    Properties:
      Tags:
      - Key: "Name"
        Value: "CI"
      KeyName: !Ref KeyName
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref InstanceSecurityGroup
  Instance3:
    Condition: Launch3
    Type: AWS::EC2::Instance
    Properties:
      Tags:
      - Key: "Name"
        Value: "QA"
      KeyName: !Ref KeyName
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref InstanceSecurityGroup
  Instance4:
    Condition: Launch4
    Type: AWS::EC2::Instance
    Properties:
      Tags:
      - Key: "Name"
        Value: "Docker"
      KeyName: !Ref KeyName
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref InstanceSecurityGroup
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation